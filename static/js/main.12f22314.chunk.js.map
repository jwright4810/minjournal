{"version":3,"sources":["components/SetGoals/icon-plus.svg","components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/Dashboard/Dashboard.js","components/DisplayFormGoals/displayFormGoals.js","components/SetGoals/SetGoals.js","icons.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","onClick","className","Signin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","loadGoals","htmlFor","type","name","onChange","React","Component","Register","onNameChange","Dashboard","displayFormGoals","title","desc","icon","index","src","alt","width","height","SetGoals","onTitleChange","goalTitle","onDescChange","goalDesc","addGoal","_this$state","goalIcon","goalList","length","alert","push","onSubmitGoals","catch","err","console","log","handleClick","s","show","setIcon","usedIcons","indexOf","route","_this2","_this$props","icons","iconList","map","i","key","goalStart","goalEnd","goal","DisplayFormGoals_displayFormGoals","placeholder","rows","ButtonToolbar_default","Button_default","Plus","Overlay_default","placement","container","containerPadding","Popover_default","initialState","userGoals","goalOne","goalTwo","goalThree","goalFour","goalFive","goalSix","App","data","goal_start","goal_end","goal_1","goal_1_desc","goal_1_icon","goal_2","goal_2_desc","goal_2_icon","goal_3","goal_3_desc","goal_3_icon","goal_4","goal_4_desc","goal_4_icon","goal_5","goal_5_desc","goal_5_icon","goal_6","goal_6_desc","goal_6_icon","components_Dashboard_Dashboard","components_Navigation_Navigation","components_SetGoals_SetGoals","components_Signin_Signin","components_Register_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12f22314.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-plus.de06cfcf.svg\";","import React from 'react';\r\n\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n        if (isSignedIn) {\r\n          return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signout')}className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n            </nav>\r\n          );  \r\n        } else {\r\n          return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signin')}className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n                <p onClick={() => onRouteChange('register')}className='f3 link dim black underline pa3 pointer'>Register</p>\r\n            </nav>\r\n          );  \r\n            \r\n        }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n \r\n\r\n\r\nclass Signin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: '',\r\n        }\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('http://localhost:3000/signin', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if(user.id) {\r\n                    this.props.loadUser(user);\r\n                    this.props.loadGoals(user);\r\n                    this.props.onRouteChange('home');\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-60-l mw6 shadow-5 center\" >\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                        <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input \r\n                            className=\"outline-transparent pa2 br2 input-reset ba bg-transparent hover-bg-navy hover-white w-100\" \r\n                            type=\"email\" \r\n                            name=\"email-address\"  \r\n                            id=\"email-address\" \r\n                            onChange={this.onEmailChange}    \r\n                        />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            className=\"outline-transparent pa2 br2 input-reset ba bg-transparent hover-bg-navy hover-white w-100\" \r\n                            type=\"password\" \r\n                            name=\"password\"  \r\n                            id=\"password\" \r\n                            onChange={this.onPasswordChange}   \r\n                        />\r\n                        </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input onClick={this.onSubmitSignIn}\r\n                            className=\"b ph3 br2 pv2 input-reset ba b--black bg-transparent hover-bg-navy hover-white border-hover grow pointer f6 dib\"\r\n                            type=\"submit\" \r\n                            value=\"Sign in\" />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                        <p onClick={()=> onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                    </div>\r\n                    </div>\r\n            </main>\r\n        </article>\r\n        ); \r\n    }\r\n    \r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\nimport './Register.css';\r\n \r\n\r\n\r\nclass Register extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: '',\r\n        }\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({name: event.target.value})\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({email: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('http://localhost:3000/register', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                name: this.state.name,\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if(user.id) {\r\n                    this.props.loadUser(user)\r\n                    this.props.onRouteChange('setgoals')\r\n                }\r\n            })\r\n        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-60-l mw6 shadow-5 center\" >\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                        <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"names\">Name</label>\r\n                        <input \r\n                            className=\"outline-transparent pa2 br2 input-reset ba bg-transparent hover-bg-navy hover-white w-100\" \r\n                            type=\"text\" \r\n                            name=\"name\"  \r\n                            id=\"name\" \r\n                            onChange={this.onNameChange}\r\n\r\n                        />\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input \r\n                            className=\"outline-transparent pa2 br2 input-reset ba bg-transparent hover-bg-navy hover-white w-100\" \r\n                            type=\"email\" \r\n                            name=\"email-address\"  \r\n                            id=\"email-address\" \r\n                            onChange={this.onEmailChange}\r\n\r\n                        />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            className=\"outline-transparent pa2 br2 input-reset ba bg-transparent hover-bg-navy hover-white w-100\" \r\n                            type=\"password\" \r\n                            name=\"password\"  \r\n                            id=\"password\" \r\n                            onChange={this.onPasswordChange}\r\n\r\n                        />\r\n                        </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input onClick={this.onSubmitSignIn}\r\n                            className=\"b ph3 br2 pv2 input-reset ba b--black bg-transparent hover-bg-navy hover-white border-hover grow pointer f6 dib\"\r\n                            type=\"submit\" \r\n                            value=\"Register\" />\r\n                    </div>\r\n                \r\n                    </div>\r\n            </main>\r\n        </article>\r\n        );  \r\n    }\r\n    \r\n}\r\n\r\nexport default Register;","import React from 'react'; \r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n    super(props);    \r\n    \r\n  }\r\n\r\n\r\n\r\n render() {\r\n     return (\r\n         <div>\r\n             <h2>Hello {this.props.user.name}</h2>\r\n         </div>\r\n     );\r\n  } \r\n}\r\n\r\nexport default Dashboard; ","import React from 'react'; \r\n\r\nconst displayFormGoals = ({ title, desc, icon, index }) => {\r\n    return (\r\n        <div className=\"br3 ba b--black-10 mv4 w-95 w-95-m w-95-l mw8 shadow-5 bg-white center\">\r\n            <h1 className=\"tl f4 pl2 \">Goal #{index + 1}: {title}</h1>\r\n            <p className=\"tl f6 pl3 pr3 pa3 bg-near-white\">Trackable step: {desc}</p>\r\n            <img \r\n              className= \"pa2 tc\"\r\n              src={icon}\r\n              alt= 'goal icon' \r\n              width=\"30px\"\r\n              height=\"30px\"\r\n              \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default displayFormGoals; \r\n\r\n\r\n","import React from 'react'; \r\nimport Plus from './icon-plus.svg';\r\nimport DisplayFormGoals from '../DisplayFormGoals/displayFormGoals';\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport Overlay from 'react-bootstrap/Overlay'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport './SetGoals.css';\r\n\r\n\r\nclass SetGoals extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            route: 'startButton',\r\n            goalTitle: '',\r\n            goalDesc: '',\r\n            goalIcon: '',\r\n            goalList: [],\r\n            show: false,\r\n            usedIcons: []          \r\n        }\r\n    } \r\n    \r\n    //sets current goal title being edited to state.goalTitle so we can grab it and push it into the goaltitle list\r\n    onTitleChange = (event) => {\r\n        this.setState({goalTitle: event.target.value})\r\n    }\r\n    onDescChange = (event) => {\r\n        this.setState({goalDesc: event.target.value})\r\n    }\r\n    // function will take the goalTitle and goalDesc set in state and push them into the goalList \r\n    // then it will map over that array and add those goals to the page\r\n    // note: function checks to make sure there are no more than six goals\r\n    addGoal = () => {\r\n        const { goalTitle, goalDesc, goalIcon, goalList} = this.state;\r\n        if(goalList.length === 6) {\r\n            alert('Already at 6 goals, please submit to move forward');\r\n        } else {\r\n            goalTitle !== '' && goalDesc !== \"\" && goalIcon !==\"\"\r\n                ? goalList.push({title: goalTitle, desc: goalDesc, icon: goalIcon})\r\n                : alert('cannot set an empty goal')\r\n        \r\n      \r\n        this.setState({\r\n            goalTitle: '',\r\n            goalDesc: '',\r\n            goalIcon: '' \r\n          }); \r\n        }\r\n        \r\n    }\r\n    /*onSubmitGoals will set goals into the user_profile database and will redirect the form to the dashboard */\r\n    onSubmitGoals = () => {\r\n        const { user } = this.props;\r\n        \r\n        if(this.state.goalList.length < 3) {\r\n            alert('must have at least 3 goals')\r\n        } else {\r\n            fetch('http://localhost:3000/submitGoals', {\r\n                method: 'put',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                  goalList: this.state.goalList, \r\n                  id: user.id\r\n               })\r\n           })\r\n           .then(response => response.json())\r\n           .then(user => {\r\n              if(user.id) {\r\n                this.props.loadGoals(user)\r\n                this.props.onRouteChange('home')\r\n              }\r\n            })\r\n           .catch(err => {\r\n               console.log('Request failure: ', err)\r\n            })\r\n        }\r\n    }\r\n    /*popover functions*/\r\n    handleClick = ({ target }) => {\r\n        this.setState(s => ({ target, show: !s.show }));\r\n      };\r\n\r\n    setIcon = (event) => {\r\n        const {usedIcons} = this.state;\r\n\r\n        if(usedIcons.indexOf(event.target.src) === -1) {\r\n            this.setState({\r\n                goalIcon: event.target.src,\r\n                show: !this.state.show,\r\n            })\r\n            usedIcons.push(event.target.src);\r\n            console.log(usedIcons);\r\n        } else {\r\n            alert('Icon already used.')\r\n        }       \r\n    }\r\n\r\n    render() {\r\n        \r\n        const { goalList } = this.state;\r\n        const { icons, user } = this.props; \r\n        const iconList = icons.map((icon, i) => {\r\n            return (\r\n              <img \r\n                className= \"icons pa2 center\"\r\n                key={i}\r\n                src={icons[i]} \r\n                alt='goal icon'\r\n                width=\"30px\"\r\n                height=\"30px\"\r\n                onClick={this.setIcon}\r\n              />\r\n            )\r\n        })\r\n        \r\n        return (  \r\n\r\n            <article className=\"br3 ba b--black-10 mv4 w-90 w-75-m w-50-l mw9 shadow-5 center bg-transparent\" >\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure center\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0 mb0\">\r\n                        <legend className=\"f3 fw6 ph0 mh0\">Goal range</legend>\r\n                        <h3>{user.goalStart} - {user.goalEnd}</h3>\r\n                        \r\n                        <div >\r\n                              {\r\n                              goalList.map((goal, i) => {\r\n                                return (\r\n                                    <DisplayFormGoals \r\n                                        key={i}\r\n                                        title={goalList[i].title}\r\n                                        desc={goalList[i].desc}\r\n                                        icon={goalList[i].icon}\r\n                                        index={i}\r\n                                       \r\n                                    />\r\n                                );\r\n                              })\r\n                            } \r\n                            \r\n                        </div>\r\n                        \r\n                        <div className=\"mt4\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"goal\">Goal</label>\r\n                        <input \r\n                            className=\"pa2 br2 input-reset ba bg-transparent hover-bg-navy hover-white w-100\" \r\n                            type=\"text\" \r\n                            name=\"goal\"  \r\n                            id=\"goal\" \r\n                            placeholder=\"Title of your goal\"\r\n                            value={this.state.goalTitle}\r\n                            onChange={this.onTitleChange}\r\n                        />\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"goalDesc\">Trackable step</label>\r\n                        <textarea \r\n                            className=\" textarea br2 pa2 ba b--black input-reset ba bg-transparent hover-bg-navy hover-white border-hover w-100\" \r\n                            type=\"textarea\" \r\n                            rows=\"4\"\r\n                            name=\"goalDesc\"  \r\n                            id=\"goalDesc\" \r\n                            placeholder= \"What trackable steps will you do to accomplish this goal?\"\r\n                            value={this.state.goalDesc}\r\n                            onChange={this.onDescChange}\r\n                        ></textarea>\r\n                        </div>\r\n                        \r\n                        <div className=\"flex items-center mb1 mt2 \"> {/*this needs to be changed to a button when clicked lets you set an icon */}\r\n                        <ButtonToolbar>\r\n                            <Button className=\"iconbtn\" onClick={this.handleClick}>\r\n                                <img \r\n                                    className=\"grow pointer mt2 \"\r\n                                    src={Plus} \r\n                                    alt=\"goal icon\" \r\n                                    width=\"20px\" \r\n                                    height=\"20px\"   \r\n                                /> \r\n                            </Button>\r\n\r\n                            <Overlay\r\n                            show={this.state.show}\r\n                            target={this.state.target}\r\n                            placement=\"bottom\"\r\n                            container={this}\r\n                            containerPadding={20}\r\n                            >\r\n                            <Popover id=\"popover-contained\" className=\"mt2 w-25 flex flex-wrap bg-white br3 ba b--black-10 shadow-5\">\r\n                                {iconList}\r\n                            </Popover>\r\n                            </Overlay>\r\n                        </ButtonToolbar>\r\n                        <p className=\"pl2 pt1\">Goal Icon</p>\r\n                        </div>\r\n                        \r\n                    </fieldset>\r\n                    <div className=\"addGoal mb1 flex justify-end \">\r\n                        <img \r\n                            className=\"grow pointer mt2 \"\r\n                            src={Plus} \r\n                            alt=\"add goal icon\" \r\n                            width=\"20px\" \r\n                            height=\"20px\"\r\n                            onClick={this.addGoal}    \r\n                          /> \r\n                          <p className=\"pl2 pt2 mt0\">add goal</p>\r\n                    </div>     \r\n                         \r\n                        \r\n                    <div className=\"submitGoals\">\r\n                        <input onClick={this.onSubmitGoals}\r\n                            className=\"b ph3 br2 pv2 input-reset ba b--black bg-transparent hover-bg-navy hover-white border-hover grow pointer f6 dib\"\r\n                            type=\"submit\" \r\n                            value=\"Set Goals\" />\r\n                        \r\n\r\n                    </div>\r\n                \r\n                    </div>\r\n            </main>\r\n        </article>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SetGoals;  \r\n\r\n            ","export const icons = [\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341426/min_app_icons/Calendar.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/stethascope.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341426/min_app_icons/treadmill.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341426/min_app_icons/chart.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341426/min_app_icons/dumbells.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341426/min_app_icons/apple.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/tennis_racket.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/running_shoe.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/stopwatch.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/supplements.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/no_sweets.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/scale.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/heart_rate.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/meditation.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/pills.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341424/min_app_icons/measuring_tape.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341424/min_app_icons/kettle_bell.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341358/min_app_icons/bicep.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341357/min_app_icons/bicycle.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341357/min_app_icons/ball.png',\r\n]","import React, { Component } from 'react';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Signin from './components/Signin/Signin';\r\nimport Register from './components/Register/Register';\r\nimport Dashboard from './components/Dashboard/Dashboard'; \r\nimport SetGoals from './components/SetGoals/SetGoals'; \r\nimport { icons } from './icons'; \r\nimport './App.css';\r\n\r\n \r\nconst initialState = {\r\n  route: 'signin',\r\n  isSignedIn: false,\r\n  user: {\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    goalStart: '',\r\n    goalEnd:'',\r\n  },\r\n  userGoals: { \r\n    goalOne: {\r\n      title: '',\r\n      desc: '',\r\n      icon: ''\r\n    },\r\n    goalTwo: {\r\n      title: '',\r\n      desc: '',\r\n      icon: ''\r\n    },\r\n    goalThree: {\r\n      title: '',\r\n      desc: '',\r\n      icon: ''\r\n    },\r\n    goalFour: {\r\n      title: '',\r\n      desc: '',\r\n      icon: ''\r\n    },\r\n    goalFive: {\r\n      title: '',\r\n      desc: '',\r\n      icon: ''\r\n    },\r\n    goalSix: {\r\n      title: '',\r\n      desc: '',\r\n      icon: ''\r\n    }\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState\r\n  }\r\n\r\n  loadUser = (data) => {\r\n    this.setState({  user: {\r\n      id: data.id,\r\n      name: data.name,\r\n      email: data.email,\r\n      password: data.password,\r\n      goalStart: data.goal_start,\r\n      goalEnd: data.goal_end,\r\n    }})\r\n  }\r\n\r\n  loadGoals = (data) => {\r\n    this.setState({userGoals: {\r\n      goalOne: {\r\n        title: data.goal_1,\r\n        desc: data.goal_1_desc,\r\n        icon: data.goal_1_icon\r\n      },\r\n      goalTwo: {\r\n        title: data.goal_2,\r\n        desc: data.goal_2_desc,\r\n        icon: data.goal_2_icon\r\n      },\r\n      goalThree: {\r\n        title: data.goal_3,\r\n        desc: data.goal_3_desc,\r\n        icon: data.goal_3_icon\r\n      },\r\n      goalFour: {\r\n        title: data.goal_4,\r\n        desc: data.goal_4_desc,\r\n        icon: data.goal_4_icon\r\n      },\r\n      goalFive: {\r\n        title: data.goal_5,\r\n        desc: data.goal_5_desc,\r\n        icon: data.goal_5_icon\r\n      },\r\n      goalSix: {\r\n        title: data.goal_6,\r\n        desc: data.goal_6_desc,\r\n        icon: data.goal_6_icon\r\n      }\r\n    }})\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if (route === 'signout') {\r\n      this.setState(initialState)\r\n    } else if (route === 'home') {\r\n      this.setState({isSignedIn: true});\r\n    }\r\n      this.setState({route: route});\r\n  }\r\n  \r\n  render() {\r\n    const { isSignedIn, route, user, userGoals} = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        \r\n        { route === 'home'\r\n            ? <div>             \r\n              <Dashboard \r\n                icons={icons}\r\n                user={user}\r\n                userGoals={userGoals}\r\n              />\r\n            </div>\r\n            : <div>\r\n              <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\r\n              {(\r\n                route === 'setgoals'\r\n                ? <div>\r\n                     \r\n                    <SetGoals \r\n                      icons={icons} \r\n                      loadGoals={this.loadGoals}\r\n                      onRouteChange={this.onRouteChange}\r\n                      user={user}\r\n                      \r\n                      />\r\n                </div>\r\n                : (\r\n                  route === 'signin'\r\n                  ? <Signin \r\n                      loadUser={this.loadUser} \r\n                      loadGoals={this.loadGoals}\r\n                      onRouteChange={this.onRouteChange}\r\n                    />\r\n                  : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n                )\r\n              )}\r\n              </div>\r\n            \r\n            \r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}