{"version":3,"sources":["components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/Dashboard/Dashboard.js","components/DisplayFormGoals/displayFormGoals.js","components/SetGoals/SetGoals.js","icons.js","App.js","serviceWorker.js","index.js","components/SetGoals/icon-plus.svg"],"names":["Navigation","_ref","onRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","onClick","className","Signin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","htmlFor","type","name","onChange","React","Component","Register","onNameChange","Dashboard","displayFormGoals","title","desc","SetGoals","onTitleChange","goalTitle","onDescChange","goalDesc","addGoal","_this$state","goalList","length","alert","push","console","log","onSubmitGoals","handleClick","currentTarget","anchorEl","open","route","goalStart","goalEnd","_this2","date","goalstart","goalend","catch","classes","_this$state2","icons","iconList","map","icon","i","src","width","height","goal","DisplayFormGoals_displayFormGoals","key","placeholder","Plus","alt","Popper_default","transition","TransitionProps","Fade_default","assign","timeout","Paper_default","Typography_default","typography","withStyles","theme","padding","spacing","unit","initialState","App","components_Navigation_Navigation","components_Dashboard_Dashboard","components_SetGoals_SetGoals","components_Signin_Signin","components_Register_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8338a276.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n        if (isSignedIn) {\r\n          return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signout')}className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n            </nav>\r\n          );  \r\n        } else {\r\n          return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signin')}className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n                <p onClick={() => onRouteChange('register')}className='f3 link dim black underline pa3 pointer'>Register</p>\r\n            </nav>\r\n          );  \r\n            \r\n        }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n \r\n\r\n\r\nclass Signin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: '',\r\n        }\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('http://localhost:3000/signin', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if(user.id) {\r\n                    this.props.loadUser(user);\r\n                    this.props.onRouteChange('home');\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\" >\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                        <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input \r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"email\" \r\n                            name=\"email-address\"  \r\n                            id=\"email-address\" \r\n                            onChange={this.onEmailChange}    \r\n                        />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"password\" \r\n                            name=\"password\"  \r\n                            id=\"password\" \r\n                            onChange={this.onPasswordChange}   \r\n                        />\r\n                        </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input onClick={this.onSubmitSignIn}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                            type=\"submit\" \r\n                            value=\"Sign in\" />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                        <p onClick={()=> onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                    </div>\r\n                    </div>\r\n            </main>\r\n        </article>\r\n        ); \r\n    }\r\n    \r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n \r\n\r\n\r\nclass Register extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: '',\r\n        }\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({name: event.target.value})\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({email: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('http://localhost:3000/register', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                name: this.state.name,\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if(user.id) {\r\n                    this.props.loadUser(user)\r\n                    this.props.onRouteChange('setgoal')\r\n                }\r\n            })\r\n        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\" >\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                        <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"names\">Name</label>\r\n                        <input \r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"text\" \r\n                            name=\"name\"  \r\n                            id=\"name\" \r\n                            onChange={this.onNameChange}\r\n\r\n                        />\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input \r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"email\" \r\n                            name=\"email-address\"  \r\n                            id=\"email-address\" \r\n                            onChange={this.onEmailChange}\r\n\r\n                        />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"password\" \r\n                            name=\"password\"  \r\n                            id=\"password\" \r\n                            onChange={this.onPasswordChange}\r\n\r\n                        />\r\n                        </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input onClick={this.onSubmitSignIn}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                            type=\"submit\" \r\n                            value=\"Register\" />\r\n                    </div>\r\n                \r\n                    </div>\r\n            </main>\r\n        </article>\r\n        );  \r\n    }\r\n    \r\n}\r\n\r\nexport default Register;","import React from 'react'; \r\n\r\nconst Dashboard = () => {\r\n    return (\r\n        <div>\r\n            <h1>This will be the dashboard to review goals</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard; ","import React from 'react'; \r\n\r\nconst displayFormGoals = ({ title, desc }) => {\r\n    return (\r\n        <div>\r\n            <h1>{title}</h1>\r\n            <p>{desc}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default displayFormGoals; \r\n\r\n\r\n","import React from 'react'; \r\nimport Plus from './icon-plus.svg';\r\nimport DisplayFormGoals from '../DisplayFormGoals/displayFormGoals';\r\nimport PropTypes from 'prop-types'; \r\nimport Popper from '@material-ui/core/Popper';\r\nimport Typography from '@material-ui/core/Typography'; \r\nimport Fade from '@material-ui/core/Fade';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    typography: {\r\n      padding: theme.spacing.unit * 2,\r\n    },\r\n  });\r\n\r\nclass SetGoals extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            route: 'startButton',\r\n            goalStart: '',\r\n            goalEnd: '',\r\n            goalTitle: '',\r\n            goalDesc: '',\r\n            goalList: [],\r\n            anchorEl: null,\r\n            open: false\r\n        }\r\n    } \r\n\r\n    /*This function needs to run when submit button is clicked on register or if todays \r\n    date is equal to goal-end data in database */\r\n    componentWillMount() {\r\n        \r\n           fetch('http://localhost:3000/setgoals', {\r\n                method:'get',\r\n                headers: {'Content-Type': 'application/json'},\r\n           })\r\n           .then(response => response.json())\r\n           .then(date => {\r\n                this.setState({\r\n                    goalStart: date.goalstart,\r\n                    goalEnd: date.goalend,\r\n\r\n                })\r\n           })\r\n           .catch(console.log)\r\n    }\r\n    //sets current goal title being edited to state.goalTitle so we can grab it and push it into the goaltitle list\r\n    onTitleChange = (event) => {\r\n        this.setState({goalTitle: event.target.value})\r\n    }\r\n    onDescChange = (event) => {\r\n        this.setState({goalDesc: event.target.value})\r\n    }\r\n    // function will take the goalTitle and goalDesc set in state and push them into the goalList \r\n    // then it will map over that array and add those goals to the page\r\n    // note: function checks to make sure there are no more than six goals\r\n    addGoal = () => {\r\n        const { goalTitle, goalDesc, goalList} = this.state;\r\n        if(goalList.length === 6) {\r\n            alert('Already at 6 goals, please submit to move forward');\r\n        } else {\r\n            goalTitle !== '' && goalDesc !== \"\" \r\n                ? goalList.push({title: goalTitle, desc: goalDesc})\r\n                : alert('cannot set an empty goal')\r\n        \r\n        console.log(goalList);\r\n        this.setState({goalTitle: ''});\r\n        this.setState({goalDesc: ''});  \r\n        }\r\n        \r\n    }\r\n    /*onSubmitGoals will set goals into the user_profile database and will redirect the form to the dashboard */\r\n    onSubmitGoals = () => {\r\n        if(this.state.goalList.length < 3) {\r\n            alert('must have at least 3 goals')\r\n        } else {\r\n            alert('sending goals to server')\r\n        }\r\n    }\r\n    /*modal functions*/\r\n    handleClick = event => {\r\n        const { currentTarget } = event;\r\n        this.setState(state => ({\r\n          anchorEl: currentTarget,\r\n          open: !state.open,\r\n        }));\r\n      };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { goalList, anchorEl, open } = this.state;\r\n        const id = open ? 'simple-popper' : null;\r\n        const { icons } = this.props; \r\n        const iconList = icons.map((icon, i) => {\r\n            return (\r\n              <img \r\n                className= \"pa1 center\"\r\n                src={icons[i]} \r\n                width=\"30px\"\r\n                height=\"30px\"\r\n              />\r\n            )\r\n        })\r\n        \r\n        return (  \r\n\r\n            <article className=\"br3 ba b--black-10 mv4 w-90 w-50-m w-50-l mw9 shadow-5 center\" >\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f3 fw6 ph0 mh0\">Goal range: {this.state.goalStart} - {this.state.goalEnd}</legend>\r\n                        \r\n                        <div>\r\n                              {\r\n                              goalList.map((goal, i) => {\r\n                                return (\r\n                                    <DisplayFormGoals \r\n                                        key={i}\r\n                                        title={goalList[i].title}\r\n                                        desc={goalList[i].desc}\r\n                                    />\r\n                                );\r\n                              })\r\n                            } \r\n                            \r\n                        </div>\r\n                        \r\n                        <div className=\"mt4\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"goal\">Goal</label>\r\n                        <input \r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"text\" \r\n                            name=\"goal\"  \r\n                            id=\"goal\" \r\n                            placeholder=\"Title of your goal\"\r\n                            value={this.state.goalTitle}\r\n                            onChange={this.onTitleChange}\r\n                        />\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"goalDesc\">Desc of goal</label>\r\n                        <input \r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"text\" \r\n                            name=\"goalDesc\"  \r\n                            id=\"goalDesc\" \r\n                            placeholder= \"detailed description of your goal\"\r\n                            value={this.state.goalDesc}\r\n                            onChange={this.onDescChange}\r\n\r\n                        />\r\n                        </div>\r\n                        \r\n                        <div className=\"flex items-center mb1 mt2 \"> {/*this needs to be changed to a button when clicked lets you set an icon */}\r\n                            <img \r\n                                className=\"grow pointer dib\"\r\n                                src={Plus} \r\n                                alt=\"add goal identifier icon\" \r\n                                width=\"20px\" \r\n                                height=\"20px\"\r\n                                onClick={this.handleClick}   \r\n                            />\r\n                            <span className=\"pa2 lh-copy\">Goal identifier</span>\r\n                            \r\n                                \r\n\r\n                            {/*This dialog box is close to what we want but really we need a popper, check\r\n                            documentation */}\r\n                            <Popper id={id} open={open} anchorEl={anchorEl} transition>\r\n                                {({ TransitionProps }) => (\r\n                                     <Fade {...TransitionProps} timeout={350}>\r\n                                        <Paper>\r\n                                            <Typography className={classes.typography}>{iconList}</Typography>\r\n                                        </Paper>\r\n                                    </Fade>\r\n                                )}\r\n                            </Popper>\r\n                            \r\n                        </div>\r\n                        \r\n                    </fieldset>\r\n                    <div className=\"addGoal mb3 flex justify-end \">\r\n                        <img \r\n                            className=\"grow pointer mt2 \"\r\n                            src={Plus} \r\n                            alt=\"add goal icon\" \r\n                            width=\"20px\" \r\n                            height=\"20px\"\r\n                            onClick={this.addGoal}    \r\n                          /> \r\n                          <p className=\"pl2 pt2 mt0\">add goal</p>\r\n                    </div>     \r\n                         \r\n                        \r\n                    <div className=\"submitGoals\">\r\n                        <input onClick={this.onSubmitGoals}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                            type=\"submit\" \r\n                            value=\"Set Goals\" />\r\n                        \r\n\r\n                    </div>\r\n                \r\n                    </div>\r\n            </main>\r\n        </article>\r\n        );\r\n    }\r\n}\r\n\r\nSetGoals.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n\r\nexport default withStyles(styles)(SetGoals);  \r\n\r\n            ","export const icons = [\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341426/min_app_icons/Calendar.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/stethascope.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341426/min_app_icons/treadmill.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341426/min_app_icons/chart.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341426/min_app_icons/dumbells.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341426/min_app_icons/apple.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/tennis_racket.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/running_shoe.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/stopwatch.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/supplements.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/no_sweets.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/scale.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/heart_rate.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/meditation.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341425/min_app_icons/pills.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341424/min_app_icons/measuring_tape.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341424/min_app_icons/kettle_bell.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341358/min_app_icons/bicep.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341357/min_app_icons/bicycle.png',\r\n    'https://res.cloudinary.com/jwkctech/image/upload/v1549341357/min_app_icons/ball.png',\r\n]","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Dashboard from './components/Dashboard/Dashboard'; \nimport SetGoals from './components/SetGoals/SetGoals'; \nimport { icons } from './icons'; \nimport './App.css';\n\n \nconst initialState = {\n  route: 'setgoals',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState\n  }\n\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true});\n    }\n      this.setState({route: route});\n  }\n  \n  render() {\n    const { isSignedIn, route } = this.state;\n    return (\n      <div className=\"App\">\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n            ? <div>\n              <Dashboard />\n            </div>\n            : (\n                route === 'setgoals'\n                ? <div>\n                    <SetGoals icons={icons} />\n                </div>\n                : (\n                  route === 'signin'\n                  ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n                  : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n                )\n              )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon-plus.12f41c3a.svg\";"],"sourceRoot":""}